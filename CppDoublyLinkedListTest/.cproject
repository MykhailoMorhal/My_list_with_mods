<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.1152177522">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.1152177522" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.1152177522" name="Debug" parent="cdt.managedbuild.config.llvm.clang.linux.exe.debug">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.1152177522." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug.858061957" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug.1821017116" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"/>
							<builder buildPath="${workspace_loc:/CppDoublyLinkedListTest}/Debug" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug.854671379" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug.221460030" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.1064284086" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug.1927492279" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.81862175" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1721809765" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.1938845435" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c99" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.88726077" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppDoublyLinkedListLib}&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.1740826438" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug.2040629290" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.970030065" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1979880188" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.805108977" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++11" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.1245789243" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppDoublyLinkedListLib}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${ProjDirPath}/../../../external/gtest/include&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppContainerCommon}&quot;"/>
									<listOptionValue builtIn="false" value="/home/algorithm/algorithms_and_structures/exercise/external/gtest/include"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.780032980" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug.763976734" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1424216326" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug.83408991" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1698127783" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.libs.1555005829" name="Libraries (-l)" superClass="llvm.c.link.option.libs" valueType="libs">
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="CppDoublyLinkedListLib"/>
									<listOptionValue builtIn="false" value="stdc++"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="gtest"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="gtest_main"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="pthread"/>
								</option>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.paths.1765326390" name="Library search path (-L)" superClass="llvm.c.link.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppDoublyLinkedListLib/Debug}&quot;"/>
									<listOptionValue builtIn="false" value="/usr/lib/gcc/x86_64-linux-gnu/5/"/>
									<listOptionValue builtIn="false" value="&quot;${ProjDirPath}/../../../external/gtest/lib/debug&quot;"/>
									<listOptionValue builtIn="false" value="/home/algorithm/algorithms_and_structures/exercise/external/gtest/lib/debug"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.2024435611" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings">
				<externalSettings containerId="CppDoublyLinkedListLib;cdt.managedbuild.config.llvm.clang.linux.lib.debug.55233373" factoryId="org.eclipse.cdt.core.cfg.export.settings.sipplier">
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/CppDoublyLinkedListLib"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/CppDoublyLinkedListLib/Debug"/>
						<entry flags="RESOLVED" kind="libraryFile" name="CppDoublyLinkedListLib" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
			</storageModule>
		</cconfiguration>
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1420881452">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1420881452" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1420881452" name="Release" parent="cdt.managedbuild.config.llvm.clang.linux.exe.release">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1420881452." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.release.919665897" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.release">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.release.509637948" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.release"/>
							<builder buildPath="${workspace_loc:/CppDoublyLinkedListTest}/Release" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.release.400668995" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.release"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.release.263500051" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.release"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.164512842" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.release.1240773881" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.release">
								<option id="llvm.c_cpp.compiler.option.optimization.level.414873864" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1514957325" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.465891022" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.c99" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.1692503836" superClass="llvm.c_cpp.compiler.option.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppDoublyLinkedListLib}&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.364778050" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.release.739598687" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.release">
								<option id="llvm.c_cpp.compiler.option.optimization.level.295422970" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.346046563" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.1895940945" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++11" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.1244326869" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppDoublyLinkedListLib}&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.950188396" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.release.812720092" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.release">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.705444557" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.release.1283453053" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.release">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1863778241" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.libs.901888339" name="Libraries (-l)" superClass="llvm.c.link.option.libs" valueType="libs">
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="CppDoublyLinkedListLib"/>
									<listOptionValue builtIn="false" value="stdc++"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="gtest"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="gtest_main"/>
									<listOptionValue builtIn="false" srcPrefixMapping="" srcRootPath="" value="pthread"/>
								</option>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.paths.839378028" name="Library search path (-L)" superClass="llvm.c.link.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/CppDoublyLinkedListLib/Release}&quot;"/>
									<listOptionValue builtIn="false" value="/usr/lib/gcc/x86_64-linux-gnu/5/"/>
									<listOptionValue builtIn="false" value="&quot;${ProjDirPath}/../../../external/gtest/lib/release&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.1766802666" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings">
				<externalSettings containerId="CppDoublyLinkedListLib;cdt.managedbuild.config.llvm.clang.linux.lib.release.56802888" factoryId="org.eclipse.cdt.core.cfg.export.settings.sipplier">
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/CppDoublyLinkedListLib"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/CppDoublyLinkedListLib/Release"/>
						<entry flags="RESOLVED" kind="libraryFile" name="CppDoublyLinkedListLib" srcPrefixMapping="" srcRootPath=""/>
					</externalSetting>
				</externalSettings>
			</storageModule>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="CppDoublyLinkedListTest.cdt.managedbuild.target.llvm.clang.linux.exe.1544687471" name="Executable" projectType="cdt.managedbuild.target.llvm.clang.linux.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope"/>
	<storageModule moduleId="org.eclipse.cdt.make.core.buildtargets"/>
</cproject>
